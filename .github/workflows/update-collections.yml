name: Update Internet Archive Collections

# To enable this workflow, rename the file to remove the .disabled extension

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Update mode'
        required: true
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full
      specific_collection:
        description: 'Specific collection prefix (optional)'
        required: false
      unity_export:
        description: 'Export to Unity'
        type: boolean
        default: true
      deploy_to_cdn:
        description: 'Deploy to CDN'
        type: boolean
        default: false
  schedule:
    - cron: '0 1 * * 1'  # Every Monday at 1 AM

jobs:
  process:
    name: Process Collections
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git LFS - Partial Clone
        run: |
          git config --global filter.lfs.smudge "git-lfs smudge --skip %f"
          git config --global filter.lfs.process "git-lfs filter-process --skip"
          
      - name: Checkout code (LFS skipped initially)
        uses: actions/checkout@v3
        with:
          lfs: false
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd SvelteKit/BackSpace
          npm ci
      
      - name: Scan for existing collections
        run: |
          cd SvelteKit/BackSpace
          npm run ia:scan
      
      - name: Process collections
        run: |
          cd SvelteKit/BackSpace
          
          # Build command with appropriate options
          CMD="npm run ia:process"
          if [[ "${{ github.event.inputs.mode }}" == "full" ]]; then
            CMD="npm run ia:process-full"
          fi
          
          if [[ -n "${{ github.event.inputs.specific_collection }}" ]]; then
            CMD="$CMD --prefix=${{ github.event.inputs.specific_collection }}"
          fi
          
          if [[ "${{ github.event.inputs.unity_export }}" == "true" ]]; then
            CMD="$CMD --unity-export"
          fi
          
          echo "Running: $CMD"
          $CMD
      
      - name: Upload collection output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: processed-collections
          path: |
            SvelteKit/BackSpace/static/data/collections/**/collection.json
            SvelteKit/BackSpace/static/data/collections/**/index.json
            SvelteKit/BackSpace/static/data/collections/**/items/*.json
      
      - name: Upload Unity resources as artifact
        if: ${{ github.event.inputs.unity_export == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: unity-collections
          path: Unity/CraftSpace/Assets/Resources/Collections
  
  deploy-cdn:
    name: Deploy to CDN
    needs: process
    if: ${{ github.event.inputs.deploy_to_cdn == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download processed collections
        uses: actions/download-artifact@v3
        with:
          name: processed-collections
          path: ./collections
      
      - name: Set up Digital Ocean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Deploy to Digital Ocean Spaces
        run: |
          echo "Deploying collections to Digital Ocean Spaces..."
          # doctl spaces create ${{ secrets.DO_SPACE_NAME }} --region nyc3 (if needed to create)
          # doctl compute ssh ${{ secrets.DO_APP_NAME }} --ssh-command "mkdir -p /var/www/html/collections" 
          # doctl compute scp ./collections ${{ secrets.DO_APP_NAME }}:/var/www/html/collections
          echo "This step would upload to your Digital Ocean Space"
      
      - name: Purge Digital Ocean CDN Cache
        run: |
          echo "Purging Digital Ocean CDN cache..."
          # Using DO API to purge CDN cache for collections
          # curl -X DELETE -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" \
          #      "https://api.digitalocean.com/v2/cdn/endpoints/${{ secrets.DO_CDN_ID }}/cache"
          echo "This step would purge your Digital Ocean CDN cache" 