name: Build and Deploy CraftSpace

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      enable:
        description: 'Set to true to run this workflow'
        required: true
        default: 'false'

jobs:
  build:
    name: Build Unity WebGL and SvelteKit App
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.enable == 'true' }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true
      
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Unity/CraftSpace/Library
          key: Library-${{ hashFiles('Unity/CraftSpace/Assets/**', 'Unity/CraftSpace/Packages/**', 'Unity/CraftSpace/ProjectSettings/**') }}
          restore-keys: |
            Library-
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'SvelteKit/BackSpace/package-lock.json'
      
      - name: Install SvelteKit Dependencies
        working-directory: SvelteKit/BackSpace
        run: npm ci
      
      - name: Process Collections
        run: |
          chmod +x .github/scripts/process-collections.sh
          .github/scripts/process-collections.sh full
      
      - name: Unity - Build WebGL
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: Unity/CraftSpace
          targetPlatform: WebGL
          buildName: CraftSpace
          buildsPath: build
      
      - name: Copy Unity Build to SvelteKit Static
        run: |
          mkdir -p SvelteKit/BackSpace/static/unity
          cp -r build/WebGL/CraftSpace/* SvelteKit/BackSpace/static/unity/
      
      - name: Build SvelteKit App
        working-directory: SvelteKit/BackSpace
        run: npm run build
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: sveltekit-build
          path: SvelteKit/BackSpace/build
          retention-days: 7

  deploy:
    name: Deploy to Production
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.enable == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: sveltekit-build
          path: ./build
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Set up SSH for App Platform
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DIGITALOCEAN_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to Digital Ocean App Platform
        run: |
          # Deploy the application
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }}
      
      - name: Verify Deployment
        run: |
          # Wait for deployment to complete
          DEPLOYMENT_ID=$(doctl apps list-deployments ${{ secrets.DIGITALOCEAN_APP_ID }} --format ID --no-header | head -n 1)
          echo "Waiting for deployment $DEPLOYMENT_ID to complete..."
          
          STATUS="UNKNOWN"
          while [ "$STATUS" != "ACTIVE" ]; do
            STATUS=$(doctl apps get-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} $DEPLOYMENT_ID --format Status --no-header)
            if [ "$STATUS" == "ERROR" ]; then
              echo "Deployment failed!"
              exit 1
            fi
            echo "Current status: $STATUS"
            sleep 10
          done
          
          echo "Deployment completed successfully!" 